name: Build and Deploy Docker Images

on:
  push:
    branches: [ main, master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/1apportunity-backend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push User Service
      uses: docker/build-push-action@v5
      with:
        context: ./user-service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-user-service:latest

    - name: Build and push Claim Service
      uses: docker/build-push-action@v5
      with:
        context: ./claim-service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-claim-service:latest

    - name: Build and push Hunt Service
      uses: docker/build-push-action@v5
      with:
        context: ./hunt-service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-hunt-service:latest

    - name: Build and push Wallet Service
      uses: docker/build-push-action@v5
      with:
        context: ./wallet-service
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-wallet-service:latest

    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.PORT }}
        script: |
          # Login to GitHub Container Registry
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          # Pull latest images
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-user-service:latest
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-claim-service:latest
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-hunt-service:latest
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-wallet-service:latest
          
          # Stop existing containers
          docker-compose down
          
          # Start services with new images
          docker-compose up -d
          
          # Clean up old images
          docker image prune -f